#ifndef STRACE_H
#define STRACE_H

////////////////////////////////////////////////////////////////////////////////
/// INCLUDES
////////////////////////////////////////////////////////////////////////////////

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdbool.h>

#include <errno.h>
#include <elf.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/wait.h>
#include <sys/ptrace.h>
#include <sys/user.h>
#include <sys/reg.h>
#include <limits.h>
#include <string.h>

////////////////////////////////////////////////////////////////////////////////
/// DEFINES
////////////////////////////////////////////////////////////////////////////////

#define SUCCESS 0
#define FAILURE 1

#define ELF_MAGIC_HASH 1179403647
#define ELF_MAGIC_SIZE 4
#define ELF_CLASS_SIZE 1

////////////////////////////////////////////////////////////////////////////////
/// ENUMS
////////////////////////////////////////////////////////////////////////////////

enum e_context
{
	ACCESS = 1,
	OPEN,
	READ,
	ELF,
	CLASS,
	FORK,
	READLINK,
	GETENV,
	STRTOK,
	MALLOC,
	STRDUP,
};

////////////////////////////////////////////////////////////////////////////////
/// STRUCTURES
////////////////////////////////////////////////////////////////////////////////

struct s_error
{
	enum e_context context;
	int (*handler)(void);
};

struct s_filepath
{
	char *path;
	char *token;
};

////////////////////////////////////////////////////////////////////////////////
/// DECLARATIONS
////////////////////////////////////////////////////////////////////////////////

int strace(const char *filename);
int handler_32(const char *filename);
int handler_64(const char *filename);

int get_handler(int (**handler)(const char *), const char *filename);
char *get_filepath(const char *filename);

int error(const enum e_context context);

#endif
